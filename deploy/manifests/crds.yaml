---
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: zookeeperclusters.zookeeper.stackable.tech
  annotations:
    helm.sh/resource-policy: keep
spec:
  group: zookeeper.stackable.tech
  names:
    categories: []
    kind: ZookeeperCluster
    plural: zookeeperclusters
    shortNames:
      - zk
    singular: zookeepercluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "Auto-generated derived type for ZookeeperClusterSpec via `CustomResource`"
          properties:
            spec:
              description: A cluster of ZooKeeper nodes
              properties:
                config:
                  nullable: true
                  properties:
                    clientAuthentication:
                      description: "Only affects client connections. This setting controls: - If clients need to authenticate themselves against the server via TLS - Which ca.crt to use when validating the provided client certs Defaults to `None`"
                      nullable: true
                      properties:
                        authenticationClass:
                          type: string
                      required:
                        - authenticationClass
                      type: object
                    quorumTlsSecretClass:
                      description: "Only affects quorum communication. Use mutual verification between Zookeeper Nodes (mandatory). This setting controls: - Which cert the servers should use to authenticate themselves against other servers - Which ca.crt to use when validating the other server"
                      type: string
                    tls:
                      description: "Only affects client connections. This setting controls: - If TLS encryption is used at all - Which cert the servers should use to authenticate themselves against the client Defaults to `TlsSecretClass` { secret_class: \"tls\".to_string() }."
                      nullable: true
                      properties:
                        secretClass:
                          type: string
                      required:
                        - secretClass
                      type: object
                  type: object
                servers:
                  nullable: true
                  properties:
                    cliOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      type: object
                    config:
                      default: {}
                      properties:
                        initLimit:
                          format: uint32
                          minimum: 0.0
                          nullable: true
                          type: integer
                        myidOffset:
                          format: uint16
                          minimum: 0.0
                          nullable: true
                          type: integer
                        syncLimit:
                          format: uint32
                          minimum: 0.0
                          nullable: true
                          type: integer
                        tickTime:
                          format: uint32
                          minimum: 0.0
                          nullable: true
                          type: integer
                      type: object
                    configOverrides:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      default: {}
                      type: object
                    envOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      type: object
                    roleGroups:
                      additionalProperties:
                        properties:
                          cliOverrides:
                            additionalProperties:
                              type: string
                            default: {}
                            type: object
                          config:
                            default: {}
                            properties:
                              initLimit:
                                format: uint32
                                minimum: 0.0
                                nullable: true
                                type: integer
                              myidOffset:
                                format: uint16
                                minimum: 0.0
                                nullable: true
                                type: integer
                              syncLimit:
                                format: uint32
                                minimum: 0.0
                                nullable: true
                                type: integer
                              tickTime:
                                format: uint32
                                minimum: 0.0
                                nullable: true
                                type: integer
                            type: object
                          configOverrides:
                            additionalProperties:
                              additionalProperties:
                                type: string
                              type: object
                            default: {}
                            type: object
                          envOverrides:
                            additionalProperties:
                              type: string
                            default: {}
                            type: object
                          replicas:
                            format: uint16
                            minimum: 0.0
                            nullable: true
                            type: integer
                          selector:
                            description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                            nullable: true
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                items:
                                  description: "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values."
                                  properties:
                                    key:
                                      description: key is the label key that the selector applies to.
                                      type: string
                                    operator:
                                      description: "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."
                                      type: string
                                    values:
                                      description: "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                type: object
                            type: object
                        type: object
                      type: object
                  required:
                    - roleGroups
                  type: object
                stopped:
                  description: "Emergency stop button, if `true` then all pods are stopped without affecting configuration (as setting `replicas` to `0` would)"
                  nullable: true
                  type: boolean
                version:
                  description: Desired ZooKeeper version
                  nullable: true
                  type: string
              type: object
            status:
              nullable: true
              properties:
                discoveryHash:
                  description: An opaque value that changes every time a discovery detail does
                  nullable: true
                  type: string
              type: object
          required:
            - spec
          title: ZookeeperCluster
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: zookeeperznodes.zookeeper.stackable.tech
  annotations:
    helm.sh/resource-policy: keep
spec:
  group: zookeeper.stackable.tech
  names:
    categories: []
    kind: ZookeeperZnode
    plural: zookeeperznodes
    shortNames:
      - zno
      - znode
    singular: zookeeperznode
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "Auto-generated derived type for ZookeeperZnodeSpec via `CustomResource`"
          properties:
            spec:
              description: "A claim for a single ZooKeeper ZNode tree (filesystem node)\n\nA `ConfigMap` will automatically be created with the same name, containing the connection string in the field `ZOOKEEPER`. Each `ZookeeperZnode` gets an isolated ZNode chroot, which the `ZOOKEEPER` automatically contains. All data inside of this chroot will be deleted when the corresponding `ZookeeperZnode` is.\n\n`ZookeeperZnode` is *not* designed to manage the contents of this ZNode. Instead, it should be used to create a chroot for an installation of an application to work inside. Initializing the contents is the responsibility of the application."
              properties:
                clusterRef:
                  default:
                    name: ~
                    namespace: ~
                  description: "A reference to a product cluster (for example, a `ZookeeperCluster`)\n\n`namespace`'s defaulting only applies when retrieved via [`ClusterRef::namespace_relative_from`]"
                  properties:
                    name:
                      description: The name of the cluster
                      nullable: true
                      type: string
                    namespace:
                      description: "The namespace of the cluster\n\nThis field is optional, and will default to the namespace of the referring object."
                      nullable: true
                      type: string
                  type: object
              type: object
          required:
            - spec
          title: ZookeeperZnode
          type: object
      served: true
      storage: true
      subresources: {}
