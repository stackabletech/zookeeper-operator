{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "operator.serviceAccountName" . }}
  labels:
    {{- include "operator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: {{ include "operator.serviceAccountName" . }}-role
  labels:
    {{- include "operator.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    #
    # at the HTTP level, the name of the resource for accessing Secret
    # objects is "secrets"
    resources:
      - pods
      - configmaps
    verbs: ["get", "watch", "list", "create", "update","delete"]
  - apiGroups: ["{{- include "operator.name" . }}.stackable.tech","command.{{- include "operator.name" . }}.stackable.tech"]
    #
    # at the HTTP level, the name of the resource for accessing Secret
    # objects is "secrets"
    resources:
      - starts
      - stops
      - restarts
      - zookeeperclusters
      - zookeeperclusters/status
    verbs: ["get", "watch", "list", "create", "update", "delete", "patch"]
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups: [""]
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: {{ include "operator.serviceAccountName" . }}-rolebinding
  labels:
    {{- include "operator.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ include "operator.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ include "operator.serviceAccountName" . }}-role
  apiGroup: rbac.authorization.k8s.io
{{- end }}